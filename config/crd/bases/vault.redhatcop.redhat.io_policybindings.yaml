
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: policybindings.vault.redhatcop.redhat.io
spec:
  group: vault.redhatcop.redhat.io
  names:
    kind: PolicyBinding
    listKind: PolicyBindingList
    plural: policybindings
    singular: policybinding
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: PolicyBinding is the Schema for the policybindings API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PolicyBindingSpec defines the desired state of PolicyBinding
            properties:
              audience:
                description: 'Audience (string: "") - Optional Audience claim to verify
                  in the JWT.'
                type: string
              policies:
                description: kubebuilder:validation:MinItems=1
                items:
                  type: string
                type: array
                x-kubernetes-list-type: set
              serviceAccounts:
                default:
                - default
                items:
                  type: string
                type: array
              tokenBoundCIDRs:
                description: 'TokenBoundCIDRs (array: [] or comma-delimited string:
                  "") - List of CIDR blocks; if set, specifies blocks of IP addresses
                  which can authenticate successfully, and ties the resulting token
                  to these blocks as well.'
                items:
                  type: string
                type: array
              tokenExplicitMaxTTL:
                description: 'token_explicit_max_ttl (integer: 0 or string: "") -
                  If set, will encode an explicit max TTL onto the token. This is
                  a hard cap even if token_ttl and token_max_ttl would otherwise allow
                  a renewal.'
                minimum: 0
                type: integer
              tokenMaxTTL:
                description: 'TokenMaxTTL (integer: 0 or string: "") - The maximum
                  lifetime for generated tokens. This current value of this will be
                  referenced at renewal time.'
                minimum: 0
                type: integer
              tokenNoDefaultPolicy:
                description: 'TokenNoDefaultPolicy (bool: false) - If set, the default
                  policy will not be set on generated tokens; otherwise it will be
                  added to the policies set in token_policies.'
                type: boolean
              tokenNumUses:
                description: 'TokenNumUses (integer: 0) - The maximum number of times
                  a generated token may be used (within its lifetime); 0 means unlimited.
                  If you require the token to have the ability to create child tokens,
                  you will need to set this value to 0.'
                minimum: 0
                type: integer
              tokenPeriod:
                description: 'TokenPeriod (integer: 0 or string: "") - The period,
                  if any, to set on the token.'
                minimum: 0
                type: integer
              tokenTTL:
                description: 'TokenTTL (integer: 0 or string: "") - The incremental
                  lifetime for generated tokens. This current value of this will be
                  referenced at renewal time.'
                minimum: 0
                type: integer
              tokenType:
                description: 'tokenType (string: "") - The type of token that should
                  be generated. Can be service, batch, or default to use the mount''s
                  tuned default (which unless changed will be service tokens). For
                  token store roles, there are two additional possibilities: default-service
                  and default-batch which specify the type to return unless the client
                  requests a different type at generation time.'
                type: string
            type: object
          status:
            description: PolicyBindingStatus defines the observed state of PolicyBinding
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
